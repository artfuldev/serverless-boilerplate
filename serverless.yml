service:
  name: serverless-boilerplate

provider:
  name: aws
  runtime: nodejs6.10
  cfLogs: true
  stage: ${opt:stage, file(./config/output.yml):stage}
  region: ${opt:region, file(./config/output.yml):region}

  environment:
    # MY_KMS_SECRET: ${self:custom.kmsSecrets.secrets.foo}
    SERVERLESS_STAGE: ${opt:stage, self:provider.stage}
    SERVERLESS_REGION: ${opt:region, self:provider.region}
    SERVERLESS_PROJECT: ${self:service}

  iamRoleStatements:
  - Effect: Allow
  Action:
    - dynamodb:*
  Resource: arn:aws:dynamodb:*:*:table/${self:custom.my_table}
  # - Effect: Allow
  #   Action:
  #     - KMS:Decrypt
  #   Resource: ${self:custom.kmsSecrets.keyArn}


plugins:
  - serverless-domain-manager
  - serverless-aws-documentation
  - serverless-kms-secrets
  - serverless-jest-plugin
  - dynalite
  - serverless-webpack
  # - serverless-dynamodb-local
  - serverless-offline


custom:
  config: ${file(./config/output.yml)}
  stage: ${opt:stage, self:custom.config.stage}
  prefix: ${self:custom.stage}-${self:service}
  my_table: ${self:custom.config.db.tables.table}-${self:custom.stage}

  # preTestCommands:
  #   - bash .tools/startOffline.sh
  # postTestCommands:
  #   - bash .tools/stopOffline.sh

  customDomain:
    basePath: ${opt:stage, self:custom.stage}
    domainName: ${self:custom.config.domain.domainName}
    stage: ${opt:stage, self:custom.stage}
    # certificateName:
    # createRoute53Record: true

  webpackIncludeModules: true

  serverless-jest-plugin:
    functionTemplate: config/templates/function-template.ejs
    testTemplate: config/templates/test-template.ejs

  serverless-kms-secrets:
    secretsFile:
    # secretsFile: kms2-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml # (optional)
  # kmsSecrets: ${file(kms-secrets2.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml)}

  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true

  # customDomain:
  #   basePath: ${self:custom.stage}
  #   domainName: boilerplate.foo.com
  #   stage: ${self:custom.stage}
  #   certificateName: # default: determined using domain name
  #   createRoute53Record: true # default: true

  documentation:
    api:
      info:
        ${file(lib/docs/info.yml)}
    tags:
      - name: MyTag
        description: This is my tag
    resources:
      - path: '/health'
        description: 'Endpoint to see if the serverless app is working'
      - path: '/hello'
        description: 'Joyful greeting by your Serverless Application'
    models:
      - ${file(lib/docs/models/200SuccessResponse.yml)}



functions:
  health:
    handler: handler.health
    events:
      - http:
          method: get
          path: health
          cors: true
          documentation:
            summary: 'GET /health'
            tags:
              - MyTag
            description: 'Check whether your serverless application is working'
            methodResponses:
              - statusCode: '200'
                responseModels:
                  'application/json': SuccessResponse

  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello
          cors: true
          documentation:
            summary: 'GET /hello'
            tags:
              - MyTag
            description: 'Let your serverless application say hello to the world!'
            methodResponses:
              - statusCode: '200'
                responseModels:
                  'application/json': SuccessResponse

  # kms:
  #   handler: handler.kms
  #   events:
  #     - http:
  #         method: get
  #         path: kms


resources:
  Resources:
    serverlessBoilerplateTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.my_table}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
